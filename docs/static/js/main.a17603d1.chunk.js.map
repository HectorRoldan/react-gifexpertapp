{"version":3,"sources":["Components/CategoryAdd.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","category","setCategory","onSubmit","e","preventDefault","trim","length","cats","value","onChange","target","type","name","getGifs","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","console","log","error","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAEvCC,EAFuC,KAE7BC,EAF6B,KAkB9C,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAASK,OAAOC,OAAS,IACzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAmBO,OACrCN,EAAY,MAKhB,UACI,8CACA,uBACAO,MAASR,EACTS,SAnBqB,SAACN,GAC1BF,EAAYE,EAAEO,OAAOF,QAmBjBG,KAAK,OACLC,KAAK,iB,+BC3BJC,EAAO,uCAAG,WAAOb,GAAP,qBAAAc,EAAA,sEAGA,mCAHA,SAKIC,MAAM,+CAAD,OAFT,mCAES,cAA4DC,UAAUhB,GAAtE,cALT,cAKTiB,EALS,gBAMQA,EAAKC,OANb,uBAMPC,EANO,EAMPA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAGzCG,QAAQC,IAAIT,GAfG,kBAgBRA,GAhBQ,kCAmBfQ,QAAQE,MAAR,MAnBe,0DAAH,sDCCPC,EAAc,SAAC,GAAuB,EAArBR,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKO,UAAY,yCAAjB,UACI,qBAAKC,IAAKT,EAAOU,IAAKT,EAAKD,MAAOA,IAClC,4BAAIA,QCHHW,EAAU,SAAC,GAAkB,IAAhBnC,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZD,mBAAS,CAC/BoB,KAAM,GACNiB,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAU,WAEN1B,EAAQb,GAAUwC,MAAK,SAAAd,GAAM,OAGzBY,EAAS,CACLnB,KAAMO,EACNU,SAAS,SAKlB,CAACpC,IAGGqC,EDnB0BI,CAAazC,GAAjC0B,EAHwB,EAG7BP,KAAaiB,EAHgB,EAGhBA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhC,IAClDoC,GAAW,mBAAGJ,UAAU,mCAAb,sBACZ,qBAAKA,UAAU,YAAf,SAEQN,EAAOL,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACQA,GADUA,EAAIC,aEe/BmB,EA3BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,KAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAKvB,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BAEQ6C,EAAWtB,KAAI,SAAArB,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCfjC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a17603d1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const CategoryAdd = ({ setCategories }) => {\n\n    const [category, setCategory] = useState('');\n\n    const handleCategoryChange = (e) => {\n        setCategory(e.target.value);\n\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (category.trim().length > 2) {\n            setCategories(cats => ([category, ...cats]));\n            setCategory('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Add Category</h2>\n            <input \n            value = {category}\n            onChange={handleCategoryChange} \n            type=\"text\" \n            name=\"category\" />\n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","\nexport const getGifs = async (category) => {\n\n    try {\n        const APIKey = \"2xjov0ZRHNKdy5LktxohTzh5hA4aCDSZ\";\n\n        const resp = await fetch(`http://api.giphy.com/v1/gifs/search?api_key=${APIKey}&q=${encodeURI(category)}&limit=10`);\n        const { data } = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            };\n        });\n        console.log(gifs)\n        return gifs;\n\n    } catch (error) {\n        console.error(error);\n    }\n\n};","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img alt={title} src={url} title={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}","import React from 'react';\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\n import { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n\n    const { data:images, loading } = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id}\n                            {...img} />\n\n                    ))\n                }\n            </div>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport { getGifs } from '../Helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n\n        getGifs(category).then(images => (\n\n\n            setState({\n                data: images,\n                loading: false\n            })\n\n        ));\n\n    }, [category]);\n\n\n    return state;\n\n};","\nimport React, { useState } from \"react\";\nimport { CategoryAdd } from \"./Components/CategoryAdd\";\nimport { GifGrid } from \"./Components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([\"\"]);\n\n\n    return (\n\n        <>\n            <h2>GifExpertApp</h2>\n            <CategoryAdd setCategories={setCategories} />\n\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category} />\n\n                    ))\n                }\n            </ol>\n\n        </>\n    );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}